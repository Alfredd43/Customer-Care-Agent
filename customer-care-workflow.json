{
  "name": "SkyNet Telecom - Voice AI Agent",
  "nodes": [
    {
      "parameters": {},
      "id": "2816f5c5-2396-4a47-a87b-400a40d50711",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -20,
        300
      ]
    },
    {
      "parameters": {
        "path": "a4b2c1d9-e3f4-4a5b-8c6d-7e8f9a0b1c2d",
        "options": {}
      },
      "id": "e98e4c75-3433-4f51-b844-46c57f724f11",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        200,
        300
      ],
      "webhookId": "a4b2c1d9-e3f4-4a5b-8c6d-7e8f9a0b1c2d"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "welcomeMessage",
              "value": "Welcome to SkyNet Telecom! How can I help you today? Please say one of the following: 'Billing', 'Network Issue', 'Recharge', or 'Talk to agent'."
            }
          ]
        },
        "options": {}
      },
      "id": "b3e0a2d1-5c7f-4b1e-9a0f-8d7e6c5a4b3c",
      "name": "Set Welcome Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        420,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://api.some-tts-provider.com/v1/speech",
        "authentication": "headerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.welcomeMessage }}"
            },
            {
              "name": "voice_id",
              "value": "uk-professional-female"
            }
          ]
        },
        "options": {
          "note": "This is a placeholder for a Text-to-Speech service like ElevenLabs, Google TTS, etc. You will need to configure the URL, authentication, and body according to your chosen provider."
        }
      },
      "id": "f5d1e8c7-a9b3-4c6d-8e2f-1a0b3c4d5e6f",
      "name": "TTS: Welcome Greeting",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        660,
        300
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "userInput",
              "value": "I have a problem with my bill, it seems too high this month."
            }
          ]
        },
        "options": {
          "note": "SIMULATION: This node simulates capturing the user's voice input. In a real workflow, this would be replaced by a Twilio 'Gather' node or similar voice capture integration. \n\nEDIT THE VALUE HERE TO TEST DIFFERENT SCENARIOS."
        }
      },
      "id": "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d",
      "name": "Simulate Voice Input",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        880,
        300
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=' + $env.GEMINI_API_KEY }}",
        "sendBody": true,
        "jsonBody": "={{ { \"contents\": [ { \"parts\": [ { \"text\": \"You are an intent classification system for SkyNet Telecom, a UK-based telecommunications company. Your goal is to understand the user's query and classify it into one of four exact categories: 'Billing', 'Network Issue', 'Recharge', or 'Talk to agent'. Do not add any explanation or conversational text. Respond ONLY with a valid JSON object containing the determined intent, like this: {\\\"intent\\\": \\\"Billing\\\"}. User query: '\" + $json.userInput + \"'\" } ] } ] } }}",
        "options": {}
      },
      "id": "e6f7a8b9-c0d1-4e2f-8a9b-3c4d5e6f7a8b",
      "name": "GEMINI: Classify Intent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "const responseText = $json.candidates[0].content.parts[0].text;\ntry {\n  const parsedJson = JSON.parse(responseText);\n  return { intent: parsedJson.intent };\n} catch (error) {\n  return { intent: 'Fallback' }; // Default to Fallback if JSON is malformed\n}"
      },
      "id": "d9e8f7a6-b5c4-4d3e-9f8a-7b6c5d4e3f2a",
      "name": "Parse Intent JSON",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [
        1360,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.intent }}",
              "operation": "equal",
              "value2": "Billing"
            },
            {
              "value1": "={{ $json.intent }}",
              "operation": "equal",
              "value2": "Network Issue"
            },
            {
              "value1": "={{ $json.intent }}",
              "operation": "equal",
              "value2": "Recharge"
            },
            {
              "value1": "={{ $json.intent }}",
              "operation": "equal",
              "value2": "Talk to agent"
            }
          ]
        }
      },
      "id": "c8d7e6f5-a4b3-4c2d-9e8f-6a5b4c3d2e1f",
      "name": "IF: Route by Intent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1600,
        300
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "billingQuestion",
              "value": "I understand you have a billing query. Are you inquiring about postpaid or prepaid billing?"
            }
          ]
        },
        "options": {}
      },
      "id": "b7a6c5d4-e3f2-4a1b-9c8d-5e4f3a2b1c0d",
      "name": "Set Billing Question",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1840,
        -120
      ]
    },
    {
      "parameters": {
        "url": "https://api.some-tts-provider.com/v1/speech",
        "authentication": "headerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.billingQuestion }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a6b5c4d3-e2f1-4a0b-9c7d-4e3f2a1b0c9d",
      "name": "TTS: Billing Question",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2060,
        -120
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "billingAnswer",
              "value": "It's for my postpaid account."
            }
          ]
        },
        "options": {
          "note": "SIMULATION: This node simulates the user's second response. Edit the value to test."
        }
      },
      "id": "f4e3d2c1-b0a9-4988-8c7d-6e5f4a3b2c1d",
      "name": "Simulate Billing Answer",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2280,
        -120
      ]
    },
    {
      "parameters": {
        "url": "={{ 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=' + $env.GEMINI_API_KEY }}",
        "sendBody": true,
        "jsonBody": "={{ { \"contents\": [ { \"parts\": [ { \"text\": \"You are a polite and professional customer service agent for SkyNet Telecom, with a formal UK accent and tone. The user's initial query was: '\" + $('Simulate Voice Input').item.json.userInput + \"'. You have already classified this as a billing issue. The user has now clarified their issue with this statement: '\" + $json.billingAnswer + \"'. Provide a helpful, specific, and empathetic response to resolve their query. Do not ask them to hold. Directly provide information or next steps.\" } ] } ] } }}",
        "options": {}
      },
      "id": "e3d2c1b0-a988-4977-8c6d-5e4f3a2b1c0d",
      "name": "GEMINI: Resolve Billing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2520,
        -120
      ]
    },
    {
      "parameters": {
        "url": "https://api.some-tts-provider.com/v1/speech",
        "authentication": "headerAuth",
        "sendBody": true,
        "jsonBody": "={{ { \"text\": $json.candidates[0].content.parts[0].text } }}",
        "options": {}
      },
      "id": "d2c1b0a9-8877-4966-8c5d-4e3f2a1b0c9d",
      "name": "TTS: Billing Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2740,
        -120
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "networkQuestion",
              "value": "I see you're having a network issue. Is it related to call drops, mobile data, or the coverage area?"
            }
          ]
        },
        "options": {}
      },
      "id": "c1b0a988-7766-4955-8c4d-3e2f1a0b9c8d",
      "name": "Set Network Question",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1840,
        140
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "rechargeQuestion",
              "value": "Certainly. Are you looking to hear about our recent offers, or would you like to do a quick recharge now?"
            }
          ]
        },
        "options": {}
      },
      "id": "b0a98877-6655-4944-8c3d-2e1f0a9b8c7d",
      "name": "Set Recharge Question",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1840,
        400
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "agentMessage",
              "value": "Of course. Please hold a moment while I connect you to a live agent."
            }
          ]
        },
        "options": {}
      },
      "id": "a9887766-5544-4933-8c2d-1e0f9a8b7c6d",
      "name": "Set Agent Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1840,
        660
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "fallbackMessage",
              "value": "My apologies, I didn’t quite catch that. Could you please repeat your query, or say one of the main options: 'Billing', 'Network Issue', 'Recharge', or 'Talk to agent'?"
            }
          ]
        },
        "options": {}
      },
      "id": "98877665-5443-4922-8c1d-0e9f8a7b6c5d",
      "name": "Set Fallback Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1840,
        920
      ]
    },
    {
      "parameters": {
        "url": "https://api.some-tts-provider.com/v1/speech",
        "authentication": "headerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.networkQuestion }}"
            }
          ]
        },
        "options": {}
      },
      "id": "87766554-4332-4911-8c0d-9e8f7a6b5c4d",
      "name": "TTS: Network Question",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2060,
        140
      ]
    },
    {
      "parameters": {
        "url": "https://api.some-tts-provider.com/v1/speech",
        "authentication": "headerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.rechargeQuestion }}"
            }
          ]
        },
        "options": {}
      },
      "id": "76655443-3221-4900-8b9d-8e7f6a5b4c3d",
      "name": "TTS: Recharge Question",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2060,
        400
      ]
    },
    {
      "parameters": {
        "url": "https://api.some-tts-provider.com/v1/speech",
        "authentication": "headerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.agentMessage }}"
            }
          ]
        },
        "options": {}
      },
      "id": "65544332-2110-48ff-8a8d-7d6e5f4a3b2c",
      "name": "TTS: Agent Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2060,
        660
      ]
    },
    {
      "parameters": {
        "url": "https://api.some-tts-provider.com/v1/speech",
        "authentication": "headerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.fallbackMessage }}"
            }
          ]
        },
        "options": {}
      },
      "id": "54433221-1009-48ee-897d-6c5d4e3f2a1b",
      "name": "TTS: Fallback Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2060,
        920
      ]
    },
    {
      "parameters": {
        "url": "https://your-live-support-system.com/api/route-call",
        "sendBody": true,
        "jsonBody": "={{ { \"callerId\": $startNode.json.query.callerId, \"initialQuery\": $('Simulate Voice Input').item.json.userInput } }}",
        "options": {
          "note": "This node simulates routing the call to a live agent system by calling a webhook."
        }
      },
      "id": "43322110-0998-48dd-886d-5b4c3d2e1f0a",
      "name": "Webhook: Route to Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2280,
        660
      ]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "append",
        "spreadsheetId": "={{ $env.GOOGLE_SHEET_ID }}",
        "sheetName": "Conversation Logs",
        "columns": {
          "values": [
            {
              "column": "A",
              "value": "={{ $now.toFormat('yyyy-MM-dd HH:mm:ss') }}"
            },
            {
              "column": "B",
              "value": "={{ $('Simulate Voice Input').item.json.userInput }}"
            },
            {
              "column": "C",
              "value": "={{ $('Parse Intent JSON').item.json.intent }}"
            },
            {
              "column": "D",
              "value": ""
            }
          ]
        }
      },
      "id": "32211009-9887-48cc-875d-4a3b2c1d0e9f",
      "name": "Google Sheets: Log Initial Query",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1360,
        540
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "={{ $env.N8N_GOOGLE_CREDENTIAL_ID }}",
          "name": "Google Sheets Account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "append",
        "spreadsheetId": "={{ $env.GOOGLE_SHEET_ID }}",
        "sheetName": "Conversation Logs",
        "columns": {
          "values": [
            {
              "column": "A",
              "value": "={{ $now.toFormat('yyyy-MM-dd HH:mm:ss') }}"
            },
            {
              "column": "B",
              "value": "={{ $('Simulate Billing Answer').item.json.billingAnswer }}"
            },
            {
              "column": "C",
              "value": "Billing"
            },
            {
              "column": "D",
              "value": "={{ $('GEMINI: Resolve Billing').item.json.candidates[0].content.parts[0].text }}"
            }
          ]
        }
      },
      "id": "21100998-8776-48bb-864d-392a1b0c9d8e",
      "name": "Google Sheets: Log Billing Response",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        2740,
        100
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "={{ $env.N8N_GOOGLE_CREDENTIAL_ID }}",
          "name": "Google Sheets Account"
        }
      }
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Set Welcome Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Welcome Message": {
      "main": [
        [
          {
            "node": "TTS: Welcome Greeting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS: Welcome Greeting": {
      "main": [
        [
          {
            "node": "Simulate Voice Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simulate Voice Input": {
      "main": [
        [
          {
            "node": "GEMINI: Classify Intent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GEMINI: Classify Intent": {
      "main": [
        [
          {
            "node": "Parse Intent JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Intent JSON": {
      "main": [
        [
          {
            "node": "IF: Route by Intent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets: Log Initial Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF: Route by Intent": {
      "main": [
        [
          {
            "node": "Set Billing Question",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Network Question",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Recharge Question",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Agent Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Fallback Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Billing Question": {
      "main": [
        [
          {
            "node": "TTS: Billing Question",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS: Billing Question": {
      "main": [
        [
          {
            "node": "Simulate Billing Answer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simulate Billing Answer": {
      "main": [
        [
          {
            "node": "GEMINI: Resolve Billing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GEMINI: Resolve Billing": {
      "main": [
        [
          {
            "node": "TTS: Billing Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS: Billing Response": {
      "main": [
        [
          {
            "node": "Google Sheets: Log Billing Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Network Question": {
      "main": [
        [
          {
            "node": "TTS: Network Question",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Recharge Question": {
      "main": [
        [
          {
            "node": "TTS: Recharge Question",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Agent Message": {
      "main": [
        [
          {
            "node": "TTS: Agent Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS: Agent Message": {
      "main": [
        [
          {
            "node": "Webhook: Route to Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Fallback Message": {
      "main": [
        [
          {
            "node": "TTS: Fallback Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {},
  "staticData": null,
  "tags": [
    "ai",
    "gemini",
    "voice",
    "ivr",
    "customer service"
  ],
  "versionId": "b1a0c9d8-e7f6-4a5b-8c4d-3e2f1a0b9c8d"
}